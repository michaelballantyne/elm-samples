var _user$project$Main$renderItems = function (items) {
	return A2(
		_elm_lang$core$List$map,
		function (i) {
			return A2(
				_elm_lang$html$Html$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(i),
					_1: {ctor: '[]'}
				});
		},
		items);
};
var _user$project$Main$choices = _elm_lang$core$Array$fromList(
	{
		ctor: '::',
		_0: 'a',
		_1: {
			ctor: '::',
			_0: 'b',
			_1: {
				ctor: '::',
				_0: 'c',
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$getChoice = function (i) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		A2(_elm_lang$core$Array$get, i, _user$project$Main$choices));
};
var _user$project$Main$addNewItems = F2(
	function (n, model) {
		addNewItems:
		while (true) {
			var _p0 = n;
			if (_p0 === 0) {
				return model;
			} else {
				var _p1 = A2(
					_elm_lang$core$Random$step,
					A2(_elm_lang$core$Random$int, 0, 2),
					model.seed);
				var randomValue = _p1._0;
				var newSeed = _p1._1;
				var _v1 = n - 1,
					_v2 = _elm_lang$core$Native_Utils.update(
					model,
					{
						seed: newSeed,
						randomItems: {
							ctor: '::',
							_0: _user$project$Main$getChoice(randomValue),
							_1: model.randomItems
						}
					});
				n = _v1;
				model = _v2;
				continue addNewItems;
			}
		}
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		if (_p2.ctor === 'InitialSeed') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						seed: _elm_lang$core$Random$initialSeed(_p2._0)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: A2(_user$project$Main$addNewItems, 5, model),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$initialModel = {
	randomItems: {ctor: '[]'},
	seed: _elm_lang$core$Random$initialSeed(0)
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {randomItems: a, seed: b};
	});
var _user$project$Main$AddItems = {ctor: 'AddItems'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$append,
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$AddItems),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('add 5 items'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			_user$project$Main$renderItems(model.randomItems)));
};
var _user$project$Main$InitialSeed = function (a) {
	return {ctor: 'InitialSeed', _0: a};
};
var _user$project$Main$generateInitialSeed = A2(
	_elm_lang$core$Random$generate,
	_user$project$Main$InitialSeed,
	A2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt));
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _user$project$Main$generateInitialSeed},
		update: _user$project$Main$update,
		view: _user$project$Main$view,
		subscriptions: _user$project$Main$subscriptions
	})();
